select  name, month, (max(avg_tmpr_f) - min(avg_tmpr_f)) as absolute_temp  
from ((
select * 
from weather 
where avg_tmpr_f is not Null 
limit 1000) as wth 
group by date_format(wth.wthr_date, 'MM') as month) 
order by absolute_temp 
limit 10;

Explanation:
select * from weather where avg_tmpr_f is not Null limit 1000
In above query, limit 1000 is mentioned as we have 2 crore + records it is optional.
Extract not_null avg_tmp_f

Then we are doing order based on absolute temperature with limit 10;




output:
Nesco Manor Hotel       08      40.342000000000006
Baymont Inn & Suites Griffin    08      40.342000000000006
Turf Motel      08     17.75833333333334
Truckee Tahoe Htl Larkspur      08      17.75833333333334
Manor Vail Lodge        08      17.75833333333334
Super 8 08      17.75833333333334
Ritz Hotel      08      17.75833333333334
West Side Motel 08      17.75833333333334
Radisson Hotel Hauppauge-long Island    08      17.75833333333334
Baymont Inn and Suites Boone    08      17.75833333333334
Time taken: 39.756 seconds, Fetched: 10 row(s)




----------------------------Execution Plan ------------------------
Explain  name, month, (max(avg_tmpr_f) - min(avg_tmpr_f)) as absolute_temp  
from ((
select * 
from weather 
where avg_tmpr_f is not Null 
limit 1000) as wth 
group by date_format(wth.wthr_date, 'MM') as month) 
order by absolute_temp 
limit 10;


OK
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: hotel_weather2
            filterExpr: (avg_tmpr_f is not Null) (type: boolean)
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: (avg_tmpr_f is not Null) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: 0 (type: int), id (type: bigint)
                sort order: ++
                Map-reduce partition columns: 0 (type: int)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                value expressions: weatherdate (type: string), avgc (type: double), name (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col1 (type: string), VALUE._col2 (type: double), KEY.reducesinkkey1 (type: bigint), VALUE._col4 (type: string)
          outputColumnNames: _col1, _col2, _col4, _col5
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          PTF Operator
            Function definitions:
                Input definition
                  input alias: ptf_0
                  output shape: _col1: string, _col2: double, _col4: bigint, _col5: string
                  type: WINDOWING
                Windowing table definition
                  input alias: ptf_1
                  name: windowingtablefunction
                  order by: _col4 ASC NULLS FIRST
                  partition by: 0
                  raw input shape:
                  window functions:
                      window function definition
                        alias: max_window_0
                        arguments: _col2
                        name: max
                        window function: GenericUDAFMaxEvaluator
                        window frame: RANGE PRECEDING(MAX)~CURRENT
                      window function definition
                        alias: min_window_1
                        arguments: _col2
                        name: min
                        window function: GenericUDAFMinEvaluator
                        window frame: RANGE PRECEDING(MAX)~CURRENT
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: _col5 (type: string), _col1 (type: string), (max_window_0 - min_window_1) (type: double)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col2 (type: double)
              sort order: -
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              TopN Hash Memory Usage: 0.1
              value expressions: _col0 (type: string), _col1 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string), KEY.reducesinkkey0 (type: double)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Limit
            Number of rows: 10
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

Time taken: 0.161 seconds, Fetched: 98 row(s)